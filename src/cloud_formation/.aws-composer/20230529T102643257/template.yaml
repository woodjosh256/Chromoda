Resources:
  getPrints:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: getPrints
      CodeUri: src/marketplace_backend
      Handler: getPrints.handler
      Runtime: nodejs18.x
      MemorySize: 128
      Timeout: 30
      Tracing: Active
      Architectures:
        - arm64
      Environment:
        Variables:
          PRINTTABLE_TABLE_NAME: !Ref PrintTable
          PRINTTABLE_TABLE_ARN: !GetAtt PrintTable.Arn
          PRINTIMAGES_BUCKET_NAME: !Ref PrintImages
          PRINTIMAGES_BUCKET_ARN: !GetAtt PrintImages.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PrintTable
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${PrintImages}
                - !Sub arn:${AWS::Partition}:s3:::${PrintImages}/*
      Events:
        PrintApiGETprints:
          Type: Api
          Properties:
            Path: /prints
            Method: GET
            RestApiId: !Ref PrintApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - index.mts
        External:
          - '@aws-sdk/*'
          - aws-sdk
        Minify: false
  getPrintsLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${getPrints}
  PrintTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: printid
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: printid
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  getPrint:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: getPrint
      CodeUri: src/marketplace_backend
      Handler: getPrint.handler
      Runtime: nodejs18.x
      MemorySize: 128
      Timeout: 30
      Tracing: Active
      Architectures:
        - arm64
      Environment:
        Variables:
          PRINTTABLE_TABLE_NAME: !Ref PrintTable
          PRINTTABLE_TABLE_ARN: !GetAtt PrintTable.Arn
          PRINTIMAGES_BUCKET_NAME: !Ref PrintImages
          PRINTIMAGES_BUCKET_ARN: !GetAtt PrintImages.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PrintTable
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${PrintImages}
                - !Sub arn:${AWS::Partition}:s3:::${PrintImages}/*
      Events:
        PrintApiGETprintid:
          Type: Api
          Properties:
            Path: /print/{id}
            Method: GET
            RestApiId: !Ref PrintApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - index.mts
        External:
          - '@aws-sdk/*'
          - aws-sdk
        Minify: false
  getPrintLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${getPrint}
  generatePreview:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: generatePreview
      CodeUri: src/marketplace_backend
      Handler: generatePreview.handler
      Runtime: nodejs18.x
      MemorySize: 128
      Timeout: 30
      Tracing: Active
      Architectures:
        - arm64
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - index.mts
        External:
          - '@aws-sdk/*'
          - aws-sdk
        Minify: false
  generatePreviewLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${generatePreview}
  savePrint:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: savePrint
      CodeUri: src/marketplace_backend
      Handler: savePrint.handler
      Runtime: nodejs18.x
      MemorySize: 128
      Timeout: 30
      Tracing: Active
      Architectures:
        - arm64
      Environment:
        Variables:
          PRINTTABLE_TABLE_NAME: !Ref PrintTable
          PRINTTABLE_TABLE_ARN: !GetAtt PrintTable.Arn
          PRINTIMAGES_BUCKET_NAME: !Ref PrintImages
          PRINTIMAGES_BUCKET_ARN: !GetAtt PrintImages.Arn
          GENERATEPREVIEW_FUNCTION_NAME: !Ref generatePreview
          GENERATEPREVIEW_FUNCTION_ARN: !GetAtt generatePreview.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PrintTable
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${PrintImages}
                - !Sub arn:${AWS::Partition}:s3:::${PrintImages}/*
        - LambdaInvokePolicy:
            FunctionName: !Ref generatePreview
      Events:
        PrintApiPUTadd:
          Type: Api
          Properties:
            Path: /add
            Method: PUT
            RestApiId: !Ref PrintApi
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - index.mts
        External:
          - '@aws-sdk/*'
          - aws-sdk
        Minify: false
  savePrintLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${savePrint}
  PrintImages:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-printimag-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  PrintImagesBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PrintImages
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt PrintImages.Arn
              - !Sub ${PrintImages.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  PrintApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: PrintApi
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /print/{id}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getPrint.Arn}/invocations
              responses: {}
          /prints:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getPrints.Arn}/invocations
              responses: {}
          /add:
            put:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${savePrint.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
  OrderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: orderid
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: orderid
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
Transform: AWS::Serverless-2016-10-31
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: Group
      Members:
        - PrintApi
        - getPrint
        - getPrints
        - savePrint
        - PrintTable
        - PrintImages
        - generatePreview